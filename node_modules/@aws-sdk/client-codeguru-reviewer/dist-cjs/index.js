"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AnalysisType: () => AnalysisType,
  AssociateRepositoryCommand: () => AssociateRepositoryCommand,
  CodeGuruReviewer: () => CodeGuruReviewer,
  CodeGuruReviewerClient: () => CodeGuruReviewerClient,
  CodeGuruReviewerServiceException: () => CodeGuruReviewerServiceException,
  ConfigFileState: () => ConfigFileState,
  ConflictException: () => ConflictException,
  CreateCodeReviewCommand: () => CreateCodeReviewCommand,
  DescribeCodeReviewCommand: () => DescribeCodeReviewCommand,
  DescribeRecommendationFeedbackCommand: () => DescribeRecommendationFeedbackCommand,
  DescribeRepositoryAssociationCommand: () => DescribeRepositoryAssociationCommand,
  DisassociateRepositoryCommand: () => DisassociateRepositoryCommand,
  EncryptionOption: () => EncryptionOption,
  InternalServerException: () => InternalServerException,
  JobState: () => JobState,
  ListCodeReviewsCommand: () => ListCodeReviewsCommand,
  ListRecommendationFeedbackCommand: () => ListRecommendationFeedbackCommand,
  ListRecommendationsCommand: () => ListRecommendationsCommand,
  ListRepositoryAssociationsCommand: () => ListRepositoryAssociationsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  NotFoundException: () => NotFoundException,
  ProviderType: () => ProviderType,
  PutRecommendationFeedbackCommand: () => PutRecommendationFeedbackCommand,
  Reaction: () => Reaction,
  RecommendationCategory: () => RecommendationCategory,
  RepositoryAssociationState: () => RepositoryAssociationState,
  ResourceNotFoundException: () => ResourceNotFoundException,
  Severity: () => Severity,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  Type: () => Type,
  UntagResourceCommand: () => UntagResourceCommand,
  ValidationException: () => ValidationException,
  VendorName: () => VendorName,
  __Client: () => import_smithy_client.Client,
  paginateListCodeReviews: () => paginateListCodeReviews,
  paginateListRecommendationFeedback: () => paginateListRecommendationFeedback,
  paginateListRecommendations: () => paginateListRecommendations,
  paginateListRepositoryAssociations: () => paginateListRepositoryAssociations,
  waitForCodeReviewCompleted: () => waitForCodeReviewCompleted,
  waitForRepositoryAssociationSucceeded: () => waitForRepositoryAssociationSucceeded,
  waitUntilCodeReviewCompleted: () => waitUntilCodeReviewCompleted,
  waitUntilRepositoryAssociationSucceeded: () => waitUntilRepositoryAssociationSucceeded
});
module.exports = __toCommonJS(src_exports);

// src/CodeGuruReviewerClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "codeguru-reviewer"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/CodeGuruReviewerClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/CodeGuruReviewerClient.ts
var _CodeGuruReviewerClient = class _CodeGuruReviewerClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultCodeGuruReviewerHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_CodeGuruReviewerClient, "CodeGuruReviewerClient");
var CodeGuruReviewerClient = _CodeGuruReviewerClient;

// src/CodeGuruReviewer.ts


// src/commands/AssociateRepositoryCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts


var import_uuid = require("uuid");

// src/models/CodeGuruReviewerServiceException.ts

var _CodeGuruReviewerServiceException = class _CodeGuruReviewerServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _CodeGuruReviewerServiceException.prototype);
  }
};
__name(_CodeGuruReviewerServiceException, "CodeGuruReviewerServiceException");
var CodeGuruReviewerServiceException = _CodeGuruReviewerServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends CodeGuruReviewerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var AnalysisType = {
  CODE_QUALITY: "CodeQuality",
  SECURITY: "Security"
};
var EncryptionOption = {
  AoCmk: "AWS_OWNED_CMK",
  CmCmk: "CUSTOMER_MANAGED_CMK"
};
var ProviderType = {
  BITBUCKET: "Bitbucket",
  CODE_COMMIT: "CodeCommit",
  GIT_HUB: "GitHub",
  GIT_HUB_ENTERPRISE_SERVER: "GitHubEnterpriseServer",
  S3_BUCKET: "S3Bucket"
};
var RepositoryAssociationState = {
  ASSOCIATED: "Associated",
  ASSOCIATING: "Associating",
  DISASSOCIATED: "Disassociated",
  DISASSOCIATING: "Disassociating",
  FAILED: "Failed"
};
var _ConflictException = class _ConflictException extends CodeGuruReviewerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _InternalServerException = class _InternalServerException extends CodeGuruReviewerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ThrottlingException = class _ThrottlingException extends CodeGuruReviewerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends CodeGuruReviewerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var VendorName = {
  GITHUB: "GitHub",
  GITLAB: "GitLab",
  NATIVE_S3: "NativeS3"
};
var ConfigFileState = {
  ABSENT: "Absent",
  PRESENT: "Present",
  PRESENT_WITH_ERRORS: "PresentWithErrors"
};
var JobState = {
  COMPLETED: "Completed",
  DELETING: "Deleting",
  FAILED: "Failed",
  PENDING: "Pending"
};
var Type = {
  PULL_REQUEST: "PullRequest",
  REPOSITORY_ANALYSIS: "RepositoryAnalysis"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends CodeGuruReviewerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var Reaction = {
  THUMBS_DOWN: "ThumbsDown",
  THUMBS_UP: "ThumbsUp"
};
var _NotFoundException = class _NotFoundException extends CodeGuruReviewerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "NotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.Message = opts.Message;
  }
};
__name(_NotFoundException, "NotFoundException");
var NotFoundException = _NotFoundException;
var RecommendationCategory = {
  AWS_BEST_PRACTICES: "AWSBestPractices",
  AWS_CLOUDFORMATION_ISSUES: "AWSCloudFormationIssues",
  CODE_INCONSISTENCIES: "CodeInconsistencies",
  CODE_MAINTENANCE_ISSUES: "CodeMaintenanceIssues",
  CONCURRENCY_ISSUES: "ConcurrencyIssues",
  DUPLICATE_CODE: "DuplicateCode",
  INPUT_VALIDATIONS: "InputValidations",
  JAVA_BEST_PRACTICES: "JavaBestPractices",
  PYTHON_BEST_PRACTICES: "PythonBestPractices",
  RESOURCE_LEAKS: "ResourceLeaks",
  SECURITY_ISSUES: "SecurityIssues"
};
var Severity = {
  CRITICAL: "Critical",
  HIGH: "High",
  INFO: "Info",
  LOW: "Low",
  MEDIUM: "Medium"
};

// src/protocols/Aws_restJson1.ts
var se_AssociateRepositoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/associations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      KMSKeyDetails: (_) => (0, import_smithy_client._json)(_),
      Repository: (_) => (0, import_smithy_client._json)(_),
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociateRepositoryCommand");
var se_CreateCodeReviewCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/codereviews");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      Name: [],
      RepositoryAssociationArn: [],
      Type: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateCodeReviewCommand");
var se_DescribeCodeReviewCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/codereviews/{CodeReviewArn}");
  b.p("CodeReviewArn", () => input.CodeReviewArn, "{CodeReviewArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeCodeReviewCommand");
var se_DescribeRecommendationFeedbackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/feedback/{CodeReviewArn}");
  b.p("CodeReviewArn", () => input.CodeReviewArn, "{CodeReviewArn}", false);
  const query = (0, import_smithy_client.map)({
    [_RI]: [, (0, import_smithy_client.expectNonNull)(input[_RI], `RecommendationId`)],
    [_UI]: [, input[_UI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeRecommendationFeedbackCommand");
var se_DescribeRepositoryAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/associations/{AssociationArn}");
  b.p("AssociationArn", () => input.AssociationArn, "{AssociationArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeRepositoryAssociationCommand");
var se_DisassociateRepositoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/associations/{AssociationArn}");
  b.p("AssociationArn", () => input.AssociationArn, "{AssociationArn}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DisassociateRepositoryCommand");
var se_ListCodeReviewsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/codereviews");
  const query = (0, import_smithy_client.map)({
    [_PT]: [() => input.ProviderTypes !== void 0, () => (input[_PT] || []).map((_entry) => _entry)],
    [_S]: [() => input.States !== void 0, () => (input[_S] || []).map((_entry) => _entry)],
    [_RN]: [() => input.RepositoryNames !== void 0, () => (input[_RN] || []).map((_entry) => _entry)],
    [_T]: [, (0, import_smithy_client.expectNonNull)(input[_T], `Type`)],
    [_MR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_NT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListCodeReviewsCommand");
var se_ListRecommendationFeedbackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/feedback/{CodeReviewArn}/RecommendationFeedback");
  b.p("CodeReviewArn", () => input.CodeReviewArn, "{CodeReviewArn}", false);
  const query = (0, import_smithy_client.map)({
    [_NT]: [, input[_NT]],
    [_MR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_UIs]: [() => input.UserIds !== void 0, () => (input[_UIs] || []).map((_entry) => _entry)],
    [_RIe]: [() => input.RecommendationIds !== void 0, () => (input[_RIe] || []).map((_entry) => _entry)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListRecommendationFeedbackCommand");
var se_ListRecommendationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/codereviews/{CodeReviewArn}/Recommendations");
  b.p("CodeReviewArn", () => input.CodeReviewArn, "{CodeReviewArn}", false);
  const query = (0, import_smithy_client.map)({
    [_NT]: [, input[_NT]],
    [_MR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListRecommendationsCommand");
var se_ListRepositoryAssociationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/associations");
  const query = (0, import_smithy_client.map)({
    [_PTr]: [() => input.ProviderTypes !== void 0, () => (input[_PT] || []).map((_entry) => _entry)],
    [_St]: [() => input.States !== void 0, () => (input[_S] || []).map((_entry) => _entry)],
    [_Na]: [() => input.Names !== void 0, () => (input[_N] || []).map((_entry) => _entry)],
    [_Ow]: [() => input.Owners !== void 0, () => (input[_O] || []).map((_entry) => _entry)],
    [_MR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_NT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListRepositoryAssociationsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_PutRecommendationFeedbackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/feedback");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CodeReviewArn: [],
      Reactions: (_) => (0, import_smithy_client._json)(_),
      RecommendationId: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutRecommendationFeedbackCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.TagKeys, `TagKeys`) != null,
      () => (input[_TK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var de_AssociateRepositoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    RepositoryAssociation: (_) => de_RepositoryAssociation(_, context),
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociateRepositoryCommand");
var de_CreateCodeReviewCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CodeReview: (_) => de_CodeReview(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateCodeReviewCommand");
var de_DescribeCodeReviewCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CodeReview: (_) => de_CodeReview(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeCodeReviewCommand");
var de_DescribeRecommendationFeedbackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    RecommendationFeedback: (_) => de_RecommendationFeedback(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeRecommendationFeedbackCommand");
var de_DescribeRepositoryAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    RepositoryAssociation: (_) => de_RepositoryAssociation(_, context),
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeRepositoryAssociationCommand");
var de_DisassociateRepositoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    RepositoryAssociation: (_) => de_RepositoryAssociation(_, context),
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DisassociateRepositoryCommand");
var de_ListCodeReviewsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CodeReviewSummaries: (_) => de_CodeReviewSummaries(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListCodeReviewsCommand");
var de_ListRecommendationFeedbackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    RecommendationFeedbackSummaries: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRecommendationFeedbackCommand");
var de_ListRecommendationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    RecommendationSummaries: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRecommendationsCommand");
var de_ListRepositoryAssociationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    RepositoryAssociationSummaries: (_) => de_RepositoryAssociationSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRepositoryAssociationsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_PutRecommendationFeedbackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_PutRecommendationFeedbackCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.codegurureviewer#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.codegurureviewer#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.codegurureviewer#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.codegurureviewer#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.codegurureviewer#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.codegurureviewer#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.codegurureviewer#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(CodeGuruReviewerServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var de_CodeReview = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AnalysisTypes: import_smithy_client._json,
    AssociationArn: import_smithy_client.expectString,
    CodeReviewArn: import_smithy_client.expectString,
    ConfigFileState: import_smithy_client.expectString,
    CreatedTimeStamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastUpdatedTimeStamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Metrics: import_smithy_client._json,
    Name: import_smithy_client.expectString,
    Owner: import_smithy_client.expectString,
    ProviderType: import_smithy_client.expectString,
    PullRequestId: import_smithy_client.expectString,
    RepositoryName: import_smithy_client.expectString,
    SourceCodeType: import_smithy_client._json,
    State: import_smithy_client.expectString,
    StateReason: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_CodeReview");
var de_CodeReviewSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_CodeReviewSummary(entry, context);
  });
  return retVal;
}, "de_CodeReviewSummaries");
var de_CodeReviewSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CodeReviewArn: import_smithy_client.expectString,
    CreatedTimeStamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastUpdatedTimeStamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    MetricsSummary: import_smithy_client._json,
    Name: import_smithy_client.expectString,
    Owner: import_smithy_client.expectString,
    ProviderType: import_smithy_client.expectString,
    PullRequestId: import_smithy_client.expectString,
    RepositoryName: import_smithy_client.expectString,
    SourceCodeType: import_smithy_client._json,
    State: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_CodeReviewSummary");
var de_RecommendationFeedback = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CodeReviewArn: import_smithy_client.expectString,
    CreatedTimeStamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastUpdatedTimeStamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Reactions: import_smithy_client._json,
    RecommendationId: import_smithy_client.expectString,
    UserId: import_smithy_client.expectString
  });
}, "de_RecommendationFeedback");
var de_RepositoryAssociation = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AssociationArn: import_smithy_client.expectString,
    AssociationId: import_smithy_client.expectString,
    ConnectionArn: import_smithy_client.expectString,
    CreatedTimeStamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    KMSKeyDetails: import_smithy_client._json,
    LastUpdatedTimeStamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    Owner: import_smithy_client.expectString,
    ProviderType: import_smithy_client.expectString,
    S3RepositoryDetails: import_smithy_client._json,
    State: import_smithy_client.expectString,
    StateReason: import_smithy_client.expectString
  });
}, "de_RepositoryAssociation");
var de_RepositoryAssociationSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RepositoryAssociationSummary(entry, context);
  });
  return retVal;
}, "de_RepositoryAssociationSummaries");
var de_RepositoryAssociationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AssociationArn: import_smithy_client.expectString,
    AssociationId: import_smithy_client.expectString,
    ConnectionArn: import_smithy_client.expectString,
    LastUpdatedTimeStamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    Owner: import_smithy_client.expectString,
    ProviderType: import_smithy_client.expectString,
    State: import_smithy_client.expectString
  });
}, "de_RepositoryAssociationSummary");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _MR = "MaxResults";
var _N = "Names";
var _NT = "NextToken";
var _Na = "Name";
var _O = "Owners";
var _Ow = "Owner";
var _PT = "ProviderTypes";
var _PTr = "ProviderType";
var _RI = "RecommendationId";
var _RIe = "RecommendationIds";
var _RN = "RepositoryNames";
var _S = "States";
var _St = "State";
var _T = "Type";
var _TK = "TagKeys";
var _UI = "UserId";
var _UIs = "UserIds";
var _tK = "tagKeys";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/AssociateRepositoryCommand.ts
var _AssociateRepositoryCommand = class _AssociateRepositoryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "AssociateRepository", {}).n("CodeGuruReviewerClient", "AssociateRepositoryCommand").f(void 0, void 0).ser(se_AssociateRepositoryCommand).de(de_AssociateRepositoryCommand).build() {
};
__name(_AssociateRepositoryCommand, "AssociateRepositoryCommand");
var AssociateRepositoryCommand = _AssociateRepositoryCommand;

// src/commands/CreateCodeReviewCommand.ts




var _CreateCodeReviewCommand = class _CreateCodeReviewCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "CreateCodeReview", {}).n("CodeGuruReviewerClient", "CreateCodeReviewCommand").f(void 0, void 0).ser(se_CreateCodeReviewCommand).de(de_CreateCodeReviewCommand).build() {
};
__name(_CreateCodeReviewCommand, "CreateCodeReviewCommand");
var CreateCodeReviewCommand = _CreateCodeReviewCommand;

// src/commands/DescribeCodeReviewCommand.ts




var _DescribeCodeReviewCommand = class _DescribeCodeReviewCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "DescribeCodeReview", {}).n("CodeGuruReviewerClient", "DescribeCodeReviewCommand").f(void 0, void 0).ser(se_DescribeCodeReviewCommand).de(de_DescribeCodeReviewCommand).build() {
};
__name(_DescribeCodeReviewCommand, "DescribeCodeReviewCommand");
var DescribeCodeReviewCommand = _DescribeCodeReviewCommand;

// src/commands/DescribeRecommendationFeedbackCommand.ts




var _DescribeRecommendationFeedbackCommand = class _DescribeRecommendationFeedbackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "DescribeRecommendationFeedback", {}).n("CodeGuruReviewerClient", "DescribeRecommendationFeedbackCommand").f(void 0, void 0).ser(se_DescribeRecommendationFeedbackCommand).de(de_DescribeRecommendationFeedbackCommand).build() {
};
__name(_DescribeRecommendationFeedbackCommand, "DescribeRecommendationFeedbackCommand");
var DescribeRecommendationFeedbackCommand = _DescribeRecommendationFeedbackCommand;

// src/commands/DescribeRepositoryAssociationCommand.ts




var _DescribeRepositoryAssociationCommand = class _DescribeRepositoryAssociationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "DescribeRepositoryAssociation", {}).n("CodeGuruReviewerClient", "DescribeRepositoryAssociationCommand").f(void 0, void 0).ser(se_DescribeRepositoryAssociationCommand).de(de_DescribeRepositoryAssociationCommand).build() {
};
__name(_DescribeRepositoryAssociationCommand, "DescribeRepositoryAssociationCommand");
var DescribeRepositoryAssociationCommand = _DescribeRepositoryAssociationCommand;

// src/commands/DisassociateRepositoryCommand.ts




var _DisassociateRepositoryCommand = class _DisassociateRepositoryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "DisassociateRepository", {}).n("CodeGuruReviewerClient", "DisassociateRepositoryCommand").f(void 0, void 0).ser(se_DisassociateRepositoryCommand).de(de_DisassociateRepositoryCommand).build() {
};
__name(_DisassociateRepositoryCommand, "DisassociateRepositoryCommand");
var DisassociateRepositoryCommand = _DisassociateRepositoryCommand;

// src/commands/ListCodeReviewsCommand.ts




var _ListCodeReviewsCommand = class _ListCodeReviewsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "ListCodeReviews", {}).n("CodeGuruReviewerClient", "ListCodeReviewsCommand").f(void 0, void 0).ser(se_ListCodeReviewsCommand).de(de_ListCodeReviewsCommand).build() {
};
__name(_ListCodeReviewsCommand, "ListCodeReviewsCommand");
var ListCodeReviewsCommand = _ListCodeReviewsCommand;

// src/commands/ListRecommendationFeedbackCommand.ts




var _ListRecommendationFeedbackCommand = class _ListRecommendationFeedbackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "ListRecommendationFeedback", {}).n("CodeGuruReviewerClient", "ListRecommendationFeedbackCommand").f(void 0, void 0).ser(se_ListRecommendationFeedbackCommand).de(de_ListRecommendationFeedbackCommand).build() {
};
__name(_ListRecommendationFeedbackCommand, "ListRecommendationFeedbackCommand");
var ListRecommendationFeedbackCommand = _ListRecommendationFeedbackCommand;

// src/commands/ListRecommendationsCommand.ts




var _ListRecommendationsCommand = class _ListRecommendationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "ListRecommendations", {}).n("CodeGuruReviewerClient", "ListRecommendationsCommand").f(void 0, void 0).ser(se_ListRecommendationsCommand).de(de_ListRecommendationsCommand).build() {
};
__name(_ListRecommendationsCommand, "ListRecommendationsCommand");
var ListRecommendationsCommand = _ListRecommendationsCommand;

// src/commands/ListRepositoryAssociationsCommand.ts




var _ListRepositoryAssociationsCommand = class _ListRepositoryAssociationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "ListRepositoryAssociations", {}).n("CodeGuruReviewerClient", "ListRepositoryAssociationsCommand").f(void 0, void 0).ser(se_ListRepositoryAssociationsCommand).de(de_ListRepositoryAssociationsCommand).build() {
};
__name(_ListRepositoryAssociationsCommand, "ListRepositoryAssociationsCommand");
var ListRepositoryAssociationsCommand = _ListRepositoryAssociationsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "ListTagsForResource", {}).n("CodeGuruReviewerClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/PutRecommendationFeedbackCommand.ts




var _PutRecommendationFeedbackCommand = class _PutRecommendationFeedbackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "PutRecommendationFeedback", {}).n("CodeGuruReviewerClient", "PutRecommendationFeedbackCommand").f(void 0, void 0).ser(se_PutRecommendationFeedbackCommand).de(de_PutRecommendationFeedbackCommand).build() {
};
__name(_PutRecommendationFeedbackCommand, "PutRecommendationFeedbackCommand");
var PutRecommendationFeedbackCommand = _PutRecommendationFeedbackCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "TagResource", {}).n("CodeGuruReviewerClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSGuruFrontendService", "UntagResource", {}).n("CodeGuruReviewerClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/CodeGuruReviewer.ts
var commands = {
  AssociateRepositoryCommand,
  CreateCodeReviewCommand,
  DescribeCodeReviewCommand,
  DescribeRecommendationFeedbackCommand,
  DescribeRepositoryAssociationCommand,
  DisassociateRepositoryCommand,
  ListCodeReviewsCommand,
  ListRecommendationFeedbackCommand,
  ListRecommendationsCommand,
  ListRepositoryAssociationsCommand,
  ListTagsForResourceCommand,
  PutRecommendationFeedbackCommand,
  TagResourceCommand,
  UntagResourceCommand
};
var _CodeGuruReviewer = class _CodeGuruReviewer extends CodeGuruReviewerClient {
};
__name(_CodeGuruReviewer, "CodeGuruReviewer");
var CodeGuruReviewer = _CodeGuruReviewer;
(0, import_smithy_client.createAggregatedClient)(commands, CodeGuruReviewer);

// src/pagination/ListCodeReviewsPaginator.ts

var paginateListCodeReviews = (0, import_core.createPaginator)(CodeGuruReviewerClient, ListCodeReviewsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListRecommendationFeedbackPaginator.ts

var paginateListRecommendationFeedback = (0, import_core.createPaginator)(CodeGuruReviewerClient, ListRecommendationFeedbackCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListRecommendationsPaginator.ts

var paginateListRecommendations = (0, import_core.createPaginator)(CodeGuruReviewerClient, ListRecommendationsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListRepositoryAssociationsPaginator.ts

var paginateListRepositoryAssociations = (0, import_core.createPaginator)(CodeGuruReviewerClient, ListRepositoryAssociationsCommand, "NextToken", "NextToken", "MaxResults");

// src/waiters/waitForCodeReviewCompleted.ts
var import_util_waiter = require("@smithy/util-waiter");
var checkState = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeCodeReviewCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.CodeReview.State;
      }, "returnComparator");
      if (returnComparator() === "Completed") {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.CodeReview.State;
      }, "returnComparator");
      if (returnComparator() === "Failed") {
        return { state: import_util_waiter.WaiterState.FAILURE, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.CodeReview.State;
      }, "returnComparator");
      if (returnComparator() === "Pending") {
        return { state: import_util_waiter.WaiterState.RETRY, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForCodeReviewCompleted = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 10, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
}, "waitForCodeReviewCompleted");
var waitUntilCodeReviewCompleted = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 10, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilCodeReviewCompleted");

// src/waiters/waitForRepositoryAssociationSucceeded.ts

var checkState2 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeRepositoryAssociationCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.RepositoryAssociation.State;
      }, "returnComparator");
      if (returnComparator() === "Associated") {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.RepositoryAssociation.State;
      }, "returnComparator");
      if (returnComparator() === "Failed") {
        return { state: import_util_waiter.WaiterState.FAILURE, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.RepositoryAssociation.State;
      }, "returnComparator");
      if (returnComparator() === "Associating") {
        return { state: import_util_waiter.WaiterState.RETRY, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForRepositoryAssociationSucceeded = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 10, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
}, "waitForRepositoryAssociationSucceeded");
var waitUntilRepositoryAssociationSucceeded = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 10, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilRepositoryAssociationSucceeded");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  CodeGuruReviewerServiceException,
  __Client,
  CodeGuruReviewerClient,
  CodeGuruReviewer,
  $Command,
  AssociateRepositoryCommand,
  CreateCodeReviewCommand,
  DescribeCodeReviewCommand,
  DescribeRecommendationFeedbackCommand,
  DescribeRepositoryAssociationCommand,
  DisassociateRepositoryCommand,
  ListCodeReviewsCommand,
  ListRecommendationFeedbackCommand,
  ListRecommendationsCommand,
  ListRepositoryAssociationsCommand,
  ListTagsForResourceCommand,
  PutRecommendationFeedbackCommand,
  TagResourceCommand,
  UntagResourceCommand,
  paginateListCodeReviews,
  paginateListRecommendationFeedback,
  paginateListRecommendations,
  paginateListRepositoryAssociations,
  waitForCodeReviewCompleted,
  waitUntilCodeReviewCompleted,
  waitForRepositoryAssociationSucceeded,
  waitUntilRepositoryAssociationSucceeded,
  AccessDeniedException,
  AnalysisType,
  EncryptionOption,
  ProviderType,
  RepositoryAssociationState,
  ConflictException,
  InternalServerException,
  ThrottlingException,
  ValidationException,
  VendorName,
  ConfigFileState,
  JobState,
  Type,
  ResourceNotFoundException,
  Reaction,
  NotFoundException,
  RecommendationCategory,
  Severity
});

